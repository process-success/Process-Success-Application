{"version":3,"sources":["ps.js"],"names":["frappe","provide","get_all_employees","ps","init_ui","inputs","$","timepicker","timeFormat","defaultTime","dynamic","dropdown","scrollbar","trigger","set_handlers","success","fail","get_error_handler","default_message","xhr","data","responseJSON","message","_server_messages","map","JSON","parse","v","console","log","e","join","call_handelers","__","call","args","type","freeze","statusCode","escapeAttr","str","replace","preptime","time","finaltime","timearray","split","am","length","pm","parseInt","toString","ready"],"mappings":"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","file":"ps.js","sourcesContent":["\n//PS core file first to load\n//tools and what not\n\n(function(){\n\n\tfrappe.provide(\"ps\");\n\t\n\tvar get_all_employees=\"process_success.ps_core.api.get_all_employees\";\n\n\tps.init_ui=function(){\n\t\tvar inputs=$('.timepicker').timepicker({\n\t\t    timeFormat: 'h:mmp',\n\t\t    // interval: 60,\n\t\t    // minTime: '10',\n\t\t    // maxTime: '6:00pm',\n\t\t    defaultTime: 'pm',\n\t\t    // startTime: '10:00',\n\t\t    dynamic: false,\n\t\t    dropdown: false,\n\t\t    scrollbar: false\n\t\t});\n\t\tinputs.trigger(\"change\");\n\t};\n\t//----------------------------------------\n\t//   simplify Calls\n\t//   ps.set_handlers\n\t//   ps.call\n\t//----------------------------------------\n\n\tps.set_handlers = function(success,fail) {\n\t\tvar get_error_handler = function(default_message,success,fail) {\n\t\t\treturn function(xhr, data) {\n\t\t\t\tif(xhr.responseJSON) {\n\t\t\t\t\tdata = xhr.responseJSON;\n\t\t\t\t}\n\n\t\t\t\tvar message = default_message;\n\t\t\t\t\n\t\t\t\tif (data._server_messages) {\n\t\t\t\t\tmessage = ($.map(JSON.parse(data._server_messages || '[]'), function(v) {\n\t\t\t\t\t\t// temp fix for messages sent as dict\n\t\t\t\t\t\tconsole.log(v);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn JSON.parse(v).message;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}) || []).join('<br>') || default_message;\n\t\t\t\t}\n\n\t\t\t\t//frappe.msgprint(message);\n\t\t\t\tconsole.log(message);\n\t\t\t};\n\t\t};\n\n\t\tvar call_handelers = {\n\t\t\t200: function(data) {\n\t\t\t\tsuccess(data);\n\t\t\t},\n\t\t\t401: get_error_handler(__(\"error\")),\n\t\t\t417: get_error_handler(__(\"error\"))\n\t\t};\n\t\treturn call_handelers;\n\t};\n\n\tps.call = function(args,success) {\n\t\treturn frappe.call({\n\t\t\ttype: \"POST\",\n\t\t\targs: args,\n\t\t\tfreeze: true,\n\t\t\tstatusCode: ps.set_handlers(success)\n\t\t});\n\t};\n\n\n\t// Turns things like s@gmail.com into escaped version to be used with j query selectors\n\tps.escapeAttr=function ( str ) {\n\t    return str.replace( /(:|\\.|\\[|\\]|,|=|@)/g, \"\\\\$1\" );\n\n\t};\n\t\n\t// probably outdated depreciated.   might move away form the original plugin\n\t//in favor of the standard type=\"time\" feilds html5\n\n\tps.preptime=function(time){\n\t\tvar finaltime=\"\";\n\t\tvar timearray=time.split(\":\");\n\t\tvar am=timearray[1].split(\"A\");\n\t\tif(am.length==1){\n\t\t\tvar pm=timearray[1].split(\"P\");\n\t\t\tfinaltime=(parseInt(timearray[0]) + 12).toString() +\":\"+ pm[0] + \":00\";\n\t\t}else{\n\t\t\tfinaltime=timearray[0]+\":\"+am[0]+\":00\";\n\t\t}\n\t\treturn finaltime;\n\t};\n\n})();\n\n//Init bit\nfrappe.ready(function() {\n\tps.init_ui();\n});\n\n"]}