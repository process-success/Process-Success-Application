{"version":3,"sources":["ps.socket.js"],"names":["ps","get_host","host","window","location","origin","dev_server","parts","split","port","frappe","boot","socketio_port","length","hostReachable","xhr","ActiveXObject","XMLHttpRequest","status","open","send","error","online","socket","open_tasks","open_docs","init","protocol","io","connect","secure","console","log","on","message","msgprint","subscribe","task_id","opts","process_response","data","method","ready"],"mappings":"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","file":"ps.socket.js","sourcesContent":["/* ------------------------------------------- \n-------------  SOCKET.IO CODE ----------------\n--------------------------------------------- */\nps.get_host= function() {\n\tvar host = window.location.origin;\n\tif(window.dev_server) {\n\t\tvar parts = host.split(\":\");\n\t\tvar port = frappe.boot.socketio_port || '8000';\n\t\tif(parts.length > 2) {\n\t\t\thost =  parts[1];\n\t\t}\n\t\thost = host + \":\" + port;\n\t}\n\treturn host;\n};\nps.hostReachable= function() {\n\t// Handle IE and more capable browsers\n\tvar xhr = new ( window.ActiveXObject || XMLHttpRequest )( \"Microsoft.XMLHTTP\" );\n\tvar status;\n\txhr.open( \"HEAD\", \"//\" + ps.get_host()+\"/test.html\", false );\n\ttry {\n\txhr.send();\n\treturn ( xhr.status >= 200 && (xhr.status < 300 || xhr.status === 304) );\n\t} catch (error) {\n\treturn false;\n\t}\n};\n\nps.online=ps.hostReachable();\nps.socket = {\n\topen_tasks: {},\n\topen_docs: [],\n\tinit: function() {\n\t\tif (ps.socket.socket) {\n\t\t\treturn;\n\t\t}\n\n\t\t//Enable secure option when using HTTPS\n\t\tif (window.location.protocol == \"https:\") {\n   \t\t\tps.socket.socket = io.connect(ps.socket.get_host(), {secure: true});\n\t\t}\n\t\telse if (window.location.protocol == \"http:\") {\n\t\t\tps.socket.socket = io.connect(ps.socket.get_host());\n\t\t}\n\t\tif (!ps.socket.socket) {\n\t\t\tconsole.log(\"Unable to connect to \" + ps.socket.get_host());\n\t\t\treturn;\n\t\t}\n\n\t\tps.socket.socket.on('msgprint', function(message) {\n\t\t\tfrappe.msgprint(message);\n\t\t});\n\t\tps.socket.socket.on('reconnect', function(message) {\n\t\t\tfrappe.msgprint(\"reconnected\");\n\t\t\tps.online=true;\n\n\t\t});\n\t\tps.socket.socket.on('connect', function(message) {\n\t\t\tps.online=true;\n\t\t});\n\t\tps.socket.socket.on('disconnect', function(message) {\n\t\t\tfrappe.msgprint(\"disconnect\");\n\t\t\tps.online=false;\n\t\t});\n\t\t//ps.socket.socket.emit('msgprint','load');\n\t},\n\tget_host: function() {\n\t\tvar host = window.location.origin;\n\t\tif(window.dev_server) {\n\t\t\tvar parts = host.split(\":\");\n\t\t\tvar port = frappe.boot.socketio_port || '9000';\n\t\t\tif(parts.length > 2) {\n\t\t\t\thost = parts[0] + \":\" + parts[1];\n\t\t\t}\n\t\t\thost = host + \":\" + port;\n\t\t}\n\t\treturn host;\n\t},\n\tsubscribe: function(task_id, opts) {\n\n\t},\n\tprocess_response: function(data, method) {\n\t\treturn;\n\t}\n};\n\nfrappe.ready(function() {\n\tps.socket.init();\n});"]}